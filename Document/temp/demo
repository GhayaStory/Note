
-----------------------------------------------------UIController
/**
 * _fText
 */
@RequestMapping(value = "/_fName", method = RequestMethod.POST)
@ResponseBody
public ReturnResult _fName(
												@RequestBody Map param,
												@RequestParam("key") String key,
												@RequestParam("pageNo") String pageNo,
												@RequestParam("pageSize") String pageSize,
												@RequestAttribute AuthUser authUser) {
	HashMap<String, Object> map = new HashMap<>();
	param.put("schoolId", authUser.getSchoolId());
	param.put("curYearId", authUser.getCurrentYearId());
	param.put("curTermId", authUser.getCurrentTermId());
	param.put("userId", authUser.getId());
	param.put("userName", authUser.getUsername());
	param.put("pageNo", pageNo);
	param.put("pageSize", pageSize);
	param.put("id", param.get("id"));


	ReturnResult result = tempService._fName(param);
	return result;
}

-----------------------------------------------------UIIService

/**
 * _fText
 */
@RequestMapping("/_fName")
@ResponseBody
ReturnResult _fName(@RequestBody Map<String, Object> map);
-----------------------------------------------------svController
/**
 * _fText
 */
@RequestMapping("/_fName")
ReturnResult _fName(@RequestBody Map<String, Object> map) {
	ReturnResult result = new ReturnResult();
	String strError = "操作失败";
	try {
		result = tempService._fName(map);
	} catch (Exception e) {
		e.printStackTrace();
		result.setCode(-1);
		result.setMsg(e.getMessage());
		logger.error(e.getMessage());
	}
	result.setNote((result.getNote() == null || "".equals(result.getNote())) ? strError : result.getNote());
	return result;
}